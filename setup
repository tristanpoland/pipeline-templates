#!/bin/bash
src="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
pipeline_types="$( cd $src && find . -name 'pipeline.yml' | sed -e "s|^\./||;s|/pipeline.yml$||")"

usage() {
    cat << EOF
${1:-"Setup pipeline template for the desired type of pipeline."}
Usage: $0 <type> [/repo/to/setup]
where <type> is one of:
$( echo "$pipeline_types" | sed -e "s/^/  - /" )
EOF
    exit ${2:-0}
}

set -e

# Ensure dependencies (fly and bosh) are installed
if ! bash "${src}/ensure_deps.sh"; then
    echo "Warning: Some dependencies are missing. The setup process may fail or have limited functionality."
    read -p "Do you want to continue anyway? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Setup aborted."
        exit 1
    fi
fi

case "${1}" in
    (-h|--help|help)
        usage
        ;;
esac

export template=$1
export target=${2:-$(pwd)}

apply_shell_expansion() {
    declare file="$1"
    declare data=$(<"$file")
    declare delimiter="__apply_shell_expansion_delimiter__"
    declare command="cat <<$delimiter"$'\n'"$data"$'\n'"$delimiter"
    eval "$command"
}

initial_settings_yml() {
    local settings_yml=${target}/ci/settings.yml
    if [[ -f ${src}/${template}/helpers/initial_settings.yml ]]; then
        export team=${team:-main}
        export name=$(basename $target)
        export fly_target=${fly_target:-$(fly targets 2>/dev/null | head -n1 | tail -n1 | awk '{print $1}')}
        export fly_target_url=$(bosh int ~/.flyrc --path /targets/${fly_target}/api 2>/dev/null || echo "")
        apply_shell_expansion ${src}/${template}/helpers/initial_settings.yml > $settings_yml
        ${src}/${template}/helpers/credhub-examples.sh
    else
        echo "--- {}" > $settings_yml
    fi
}

[ -n "${template}" ] || usage "ERROR: Missing pipeline template type" 1
[ -d "${target}" ]   || usage "ERROR: ${target} path not found"       1
pattern="^($( echo "$pipeline_types" | tr "\n" "|" | sed -e "s/\|*$//" ))$"
[[ "${template}" =~ $pattern ]] || usage "ERROR: ${template} is not a valid pipeline template" 1

echo "Installing ${template} pipeline in ${target}..."
mkdir -p ${target}/ci
cp -R ${src}/${template}/* ${target}/ci/
rm -rf ${target}/ci/helpers
cp ${src}/repipe ${target}/ci/
[ -f ${target}/ci/settings.yml ] || initial_settings_yml ${template} ${target}

echo "Setup completed. Please review the installed files and configurations."
exit 0